version: "3.9"

services:
  db:
    image: postgres:16
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_SYNCHRONOUS_COMMIT=on
      - POSTGRES_WAL_LEVEL=replica
    volumes:
      - {{cookiecutter.project_slug}}-data:/var/lib/postgresql/data
  rabbitmq:
    image: "rabbitmq:alpine"

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    image: redis:7.4
    ports:
      - 6379:6379
    volumes:
      - {{cookiecutter.project_slug}}-redis-data:/data


  django:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: "sh -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - REDIS_LOCATION=${REDIS_LOCATION}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - ./src:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: on-failure

  # celery:
  #   build:
  #     context: .
  #     dockerfile: docker/local.Dockerfile
  #   command: celery -A tasks worker -l info --without-gossip --without-mingle --without-heartbeat
  #   environment:
  #     - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  #     - REDIS_LOCATION=${REDIS_LOCATION}
  #     - SECRET_KEY=${SECRET_KEY}
  #     - DEBUG=${DEBUG}
  #     - DB_NAME=${DB_NAME}
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_HOST=${DB_HOST}
  #     - DB_PORT=${DB_PORT}
  #   volumes:
  #     - ./src:/app
  #   depends_on:
  #     - db
  #     - rabbitmq
  #   restart: on-failure

  # beats:
  #   build:
  #     context: .
  #     dockerfile: docker/local.Dockerfile
  #   command: celery -A tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   environment:
  #     - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  #     - REDIS_LOCATION=${REDIS_LOCATION}
  #     - SECRET_KEY=${SECRET_KEY}
  #     - DEBUG=${DEBUG}
  #     - DB_NAME=${DB_NAME}
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_HOST=${DB_HOST}
  #     - DB_PORT=${DB_PORT}
  #   volumes:
  #     - ./src:/app
  #   depends_on:
  #     - db
  #     - rabbitmq
  #   restart: on-failure

volumes:
  {{cookiecutter.project_slug}}-data:
  {{cookiecutter.project_slug}}-redis-data:
